name: Build

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - v4.*

jobs:
  allinone:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [all]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Get Version
        run: |
          echo "version=$(basename ${GITHUB_REF})" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: ./allinone
          file: ./allinone/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ github.repository_owner }}/jms_${{ matrix.component }}:${{ env.version }}
            ${{ github.repository_owner }}/jms_${{ matrix.component }}:latest
            ghcr.io/${{ github.repository_owner }}/jms_${{ matrix.component }}:${{ env.version }}
            ghcr.io/${{ github.repository_owner }}/jms_${{ matrix.component }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: false